Research Veridity—a zero-knowledge identity wallet and verifier for Nepal—and produce a rigorous, long, prioritized improvement plan covering cryptography (Circom/Groth16 vs PLONK, mobile WASM proving, multi-proof aggregation, trusted setup handling, proof size/latency benchmarks), W3C Verifiable Credentials with SD-JWT/BBS+ selective disclosure, Presentation Exchange, revocation via StatusList/CRL, and an offline QR protocol with nonce binding and anti-replay; security and privacy (TLS1.3, strict CSP/HSTS/COOP/COEP, rate limits, idempotency keys, replay/nonces, webhook HMAC, API keys with scopes + rotation + IP allowlists, KMS-managed secrets, device keystore/AES-GCM, signed append-only audit logs, threat model for phishing QR, collusion, SIM-swap, side-channels); platform/ops (edge vs region placement, Redis/KV, queues, CDN, cold-start, Infra-as-Code, OpenTelemetry traces/metrics/logs, SLOs, synthetic monitors); product/UX (AAA light/dark tokens, a11y WCAG 2.2, Nepali typography, full Nepal admin dataset with cascading Province→District→Municipality selects using portals/fixed positioning, backup/restore via Passkeys + mnemonic, history filters/export, share via QR/link with expiry/countdown, full-screen QR, voice UX); language/voice (fix segmented control bug, unify BCP-47 en-US/ne-NP, high-quality TTS/ASR providers with graceful fallbacks, caching, device capability checks); APIs & SDKs (OpenAPI 3.1, generated TS/Python/Java/Kotlin/Swift SDKs, Postman, versioning, sandbox and webhooks); compliance/governance (consent, retention, deletion, lawful basis, regional hosting); partner enablement (Verifier SDK, reference verifier app, pilot checklist, test datasets). Deliver: (1) an executive summary of biggest risks/wins and a 30/60/90 plan; (2) a gap-analysis table (Area, Current, Risk, Better Approach, Priority, Effort, Owner); (3) a very long backlog split into P0/P1/P2 where every item includes Title, Why/User Story, Acceptance Criteria, Tech Notes (APIs, libraries, perf targets), Dependencies, Labels, and Owner; (4) architecture deltas and DB migrations (credentials, status lists, audit digests, API clients); (5) API deltas as OpenAPI snippets (QR request/response, verify, status, admin key mgmt, webhooks); (6) test plans (unit/integration/e2e/security/crypto), KPIs/SLOs, and rollout steps; (7) documentation tasks (dev portal, verifier guide, admin guide, threat model, cryptography notes). Assume reasonable details if missing, cite relevant standards/providers when asserting capabilities, and optimize for concrete, testable acceptance criteria and measurable KPIs.